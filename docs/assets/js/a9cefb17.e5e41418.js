"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2722],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),h=d(n),u=a,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||i;return n?o.createElement(m,s(s({ref:t},c),{},{components:n})):o.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[h]="string"==typeof e?e:a,s[1]=r;for(var d=2;d<i;d++)s[d]=n[d];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5912:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=n(3117),a=(n(7294),n(3905));const i={date:new Date("2023-01-20T00:00:00.000Z"),title:"China's Highways ETC",subTitle:null,description:"KubeEdge-based system managing 100,000 Edge Nodes on China's Highways Using KubeEdge",tags:["UserCase"]},s="Managing 100,000 Edge Nodes on China's Highways Using KubeEdge",r={type:"mdx",permalink:"/gameone/case-studies/chinahighways/",source:"@site/src/pages/case-studies/chinahighways/index.mdx",title:"China's Highways ETC",description:"KubeEdge-based system managing 100,000 Edge Nodes on China's Highways Using KubeEdge",frontMatter:{date:"2023-01-20T00:00:00.000Z",title:"China's Highways ETC",subTitle:null,description:"KubeEdge-based system managing 100,000 Edge Nodes on China's Highways Using KubeEdge",tags:["UserCase"]}},l=[{value:"Project Background",id:"project-background",level:2},{value:"Why Cloud Native?",id:"why-cloud-native",level:2},{value:"Why KubeEdge?",id:"why-kubeedge",level:2},{value:"Highly complex hardware management and application operations",id:"highly-complex-hardware-management-and-application-operations",level:4},{value:"Complex and unreliable network connectivity",id:"complex-and-unreliable-network-connectivity",level:4},{value:"Project overall design",id:"project-overall-design",level:2},{value:"Application Deployment",id:"application-deployment",level:2},{value:"Large-Scale Node Access",id:"large-scale-node-access",level:2},{value:"High Availability of Edge Services",id:"high-availability-of-edge-services",level:2},{value:"Summary",id:"summary",level:2}],d={toc:l},c="wrapper";function h(e){let{components:t,...i}=e;return(0,a.kt)(c,(0,o.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"managing-100000-edge-nodes-on-chinas-highways-using-kubeedge"},"Managing 100,000 Edge Nodes on China's Highways Using KubeEdge"),(0,a.kt)("p",null,"This KubeEdge-based system for Electronic Toll Collection (ETC) manages nearly 100,000 edge nodes and more than 500,000 edge applications across 29 of China's 34 provinces, cities and autonomous regions. With these applications, the system processes more than 300 million data records daily and supports continuous update of ETC services on highways. With this KubeEdge-based system, the traffic efficiency at the toll stations have improved by 10 times."),(0,a.kt)("h2",{id:"project-background"},"Project Background"),(0,a.kt)("p",null,"More than 200 million drivers in China are now equipped with electronic toll collection (ETC) devices to pay automatically when driving on the country's highways."),(0,a.kt)("p",null,"In order to improve the efficiency and compatibility of ETC systems on highways in China, Beijing Internet Zhilian Technology initiated a project to connect all ETC systems to one unified network and remove segregated, provincial toll stations. As a result, ETC gantries needed to be deployed on highways nationwide to collect license plate and transaction information when vehicles pass through toll booths."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"electronic-toll-booths",src:n(9360).Z,width:"480",height:"372"})),(0,a.kt)("p",null,"In this modernization project, nearly 100,000 gantries, controllers, and edge devices were deployed at the edge on highways. More than 500,000 applications were deployed on edge nodes to collect and upload information to provincial centers and Highway Monitoring & Response Center through the toll collection private network."),(0,a.kt)("p",null,"The project faced the following challenges:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Low quality network connections between centers and edge devices, with frequent delays, packet loss, and low bandwidth"),(0,a.kt)("li",{parentName:"ul"},"Unified management of nearly 100,000 heterogeneous devices, including Arm and x86 devices"),(0,a.kt)("li",{parentName:"ul"},"Lifecycle management of more than 500,000 applications")),(0,a.kt)("p",null,"After a comparative analysis of different architectures including cloud native and traditional ones, Beijing Internet Zhilian Technology selected a cloud-native based architecture proposed by Huawei, with KubeEdge as the key solution addressing the project's problems."),(0,a.kt)("h2",{id:"why-cloud-native"},"Why Cloud Native?"),(0,a.kt)("p",null,"In this project, the applications deployed at the edge are as complex as those in the cloud. For example, they comprise multiple microservices. Since Kubernetes is ideal for deploying and managing microservice applications at scale, the project had a goal to bring the benefits of Kubernetes to edge environments."),(0,a.kt)("p",null,"The project had the following typical deployment requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hot standby"),(0,a.kt)("li",{parentName:"ul"},"Multi-active mutual backup"),(0,a.kt)("li",{parentName:"ul"},"Associated applications must be deployed on the same node to improve the interaction efficiency between applications."),(0,a.kt)("li",{parentName:"ul"},"Different instances of the same application must be deployed on different nodes to improve availability."),(0,a.kt)("li",{parentName:"ul"},"Applications must be deployed in different edge node groups based on the properties of edge nodes."),(0,a.kt)("li",{parentName:"ul"},"Application deployment should be defined as an independent object and also applications must be automatically deployed after new edge nodes that meet requirements are brought online.")),(0,a.kt)("p",null,"These requirements could be addressed by standard Kubernetes APIs, such as Deployments, ReplicaSets, and DaemonSets."),(0,a.kt)("p",null,"In addition, however, there were some requirements unique to the edge environment so that just using Kubernetes was not sufficient."),(0,a.kt)("h2",{id:"why-kubeedge"},"Why KubeEdge?"),(0,a.kt)("p",null,"The project had two issues for its edge environment that standard Kubernetes could not address well:"),(0,a.kt)("h4",{id:"highly-complex-hardware-management-and-application-operations"},"Highly complex hardware management and application operations"),(0,a.kt)("p",null,"Because they were deployed nationwide, the edge nodes in the ETC system were highly distributed, provided by multiple vendors, and span heterogeneous hardware architectures."),(0,a.kt)("p",null,"Some edge industrial computers were so small they only had a 1 quad-core ARM SoC and 1 GB memory. Thus, the ETC solution needed to use as few resources as possible to manage edge nodes."),(0,a.kt)("p",null,"Additionally, the ETC system included six different management layers for applications, starting from the Highway Monitoring & Response Center out to the final road section. This could lead to complex operations and maintenance (O&M) and high costs. The ETC solution needed to address these issues by simplifying edge setup, minimizing the probability of problem occurrences, and reducing O&M costs."),(0,a.kt)("h4",{id:"complex-and-unreliable-network-connectivity"},"Complex and unreliable network connectivity"),(0,a.kt)("p",null,"The ETC network divides into two layers: one is from the Highway Monitoring & Response Center to each provincial center, and the other is from each provincial center to toll stations on highways. A proxy server forwards data between the two layers."),(0,a.kt)("p",null,"Across these network layers and proxy, edge devices must be highly flexible and support multiple modes of access through private line, proxy, and public network, in either wired or wireless mode."),(0,a.kt)("p",null,"The network infrastructure varies significantly between each province. In some provinces, the network bandwidth is as low as 3 Mbit/s. The ETC solution must minimize the usage of the management network between the edge and cloud to fit within this low bandwidth. In addition, the network quality on some highways is very poor, which frequently causes network disconnections. The solution must have the ability to continue to operate offline in the case of network loss."),(0,a.kt)("p",null,"KubeEdge proved to be the ideal solution to address these issues. It provides both a highly lightweight edge engine to fit into small computers, as well as robust optimizations for the unstable network between the cloud and edge environments."),(0,a.kt)("h2",{id:"project-overall-design"},"Project overall design"),(0,a.kt)("p",null,"As shown below, the ETC project uses KubeEdge to manage large-scale edge nodes and a large number of services on the edge nodes from the cloud."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"kubeedge-edge-nodes-cloud",src:n(6186).Z,width:"576",height:"454"})),(0,a.kt)("p",null,"The project provided a solution across three main areas:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Application Deployment"),(0,a.kt)("li",{parentName:"ul"},"Large-Scale Node Access"),(0,a.kt)("li",{parentName:"ul"},"High Availability of Edge Services")),(0,a.kt)("h2",{id:"application-deployment"},"Application Deployment"),(0,a.kt)("p",null,"The edge application services for the ETC system are as complex as any running in a cloud datacenter. They use cloud-native architecture and comprise multiple microservices. Additionally, they must also adapt to various heterogeneous hardware and operating systems, while still facilitating unified management."),(0,a.kt)("p",null,"As shown below, the microservice architecture consists of a front end and a back end. The front end deploys services on ETC gantries as Deployments and communicates with the back end through EdgeMesh. In this way, frontend and backend pods of microservices can communicate with each other. Redis and MySQL are deployed using StatefulSets. This deployment model perfectly encapsulates and automates the entire set of highly available systems at the edge."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"edgemesh-statefulsets",src:n(5536).Z,width:"439",height:"554"})),(0,a.kt)("p",null,"However, the deployment model in the preceding figure could be applied to only one toll station at a time. In this project, a road section has hundreds or thousands of toll stations. It is labor-consuming to deploy these toll stations one by one. Therefore, a workflow engine system was constructed based on Kubernetes to define each step for deploying a microservice as a job. In this way, hundreds of thousands of identical microservice systems and environments can be rapidly deployed in batches."),(0,a.kt)("h2",{id:"large-scale-node-access"},"Large-Scale Node Access"),(0,a.kt)("p",null,"In addition to the challenge of application deployment, the ETC solution also addressed many other key issues:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Each province was managing its own nodes. One Kubernetes cluster was configured for each province, and a unified management layer was deployed to process complex cross-cluster data, allowing the central site to manage the edge side of each province. This method is called multi-cluster management."),(0,a.kt)("li",{parentName:"ul"},"After a network upgrade was performed at the Highway Monitoring & Response Center or a provincial center, all edge nodes in the provinces were disconnected from their Kubernetes clusters in case of a network failure. After the network recovers, all edge nodes would simultaneously connect to the Kubernetes cluster at the central side. A large number of concurrent connections would impact the system at the central site and cause application exceptions. Therefore, a dynamic back-off algorithm was used to relieve such impacts."),(0,a.kt)("li",{parentName:"ul"},"As mentioned earlier, the infrastructure varies in each province. The network bandwidth in some provinces was as low as 3 Mbit/s. Therefore, the information reported by NodeStatus and PodStatus was simplified to reduce the impact of data reporting on the network.")),(0,a.kt)("p",null,"Hierarchical acceleration of the container registry mirror effectively reduces the impact on the central site and improves the efficiency of large-scale deployment."),(0,a.kt)("h2",{id:"high-availability-of-edge-services"},"High Availability of Edge Services"),(0,a.kt)("p",null,"The standard way to update Kubernetes applications in clouds is that the system deletes the pod of the old version, pulls the new image tag, and creates a new pod. This operation is acceptable when the cloud's network is in good condition. However, in this ETC edge environment, services will be interrupted for a long time, and the toll data will be lost. Therefore, the application upgrade process was also optimized for this project."),(0,a.kt)("p",null,"The first optimization is to send a notification to instruct the edge node to pre-download the image of the new version. After the image is downloaded, the system deletes the old pod and starts the new application. In this way, the overall service interruption duration during the upgrade was shortened from minutes to less than 10 seconds, greatly reducing the impact on the services."),(0,a.kt)("p",null,"Edge devices are deployed in active/standby mode, but they cannot communicate with each other through services like Elastic Load Balance (ELB), a service deployed only in the cloud. To prevent single point of failures (SPOFs), Keepalived was configured for containers on edge nodes. In this way, the containers could provide services for cameras and other devices in the gantry systems through their virtual IP addresses (VIPs)."),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"The general deployment and scheduling model of Kubernetes is suitable for deployment of large-scale edge applications. KubeEdge, integrated with the Kubernetes cloud native management capability, provides better support for deployment and management of edge services."),(0,a.kt)("p",null,"This KubeEdge-based edge management system manages nearly 100,000 edge nodes and more than 500,000 edge applications across 29 of China's 34 provinces, cities and autonomous regions. With these applications, the system processes more than 300 million data records daily and supports continuous update of ETC services on highways. Time used passing through toll station is reduced from 29s to 3s for trucks, and from 15s to 2s for cars."),(0,a.kt)("p",null,"This project also provides a platform for innovative services such as V2X and autonomous driving."),(0,a.kt)("p",null,"Huawei worked closely with Beijing Internet Zhilian Technology in this project to develop these optimizations for KubeEdge and Kubernetes and bring them back upstream into the CNCF open source community."))}h.isMDXComponent=!0},5536:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/edgemesh-statefulsets-a6e99be1c460f23d3e5049ca8ea6a06c.png"},9360:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/electronic-toll-booths-16d35217d2553970baf8b894071335a6.png"},6186:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/kubeedge-edge-nodes-cloud-44ec7fee3c2c0d434fcaba0705176330.png"}}]);