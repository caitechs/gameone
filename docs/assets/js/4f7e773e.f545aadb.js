"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8808],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=c(n),m=o,h=s["".concat(d,".").concat(m)]||s[m]||u[m]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[s]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46369:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(83117),o=(n(67294),n(3905));const r={title:"\u6545\u969c\u6392\u9664",sidebar_position:7},l=void 0,i={unversionedId:"developer/troubleshooting",id:"developer/troubleshooting",title:"\u6545\u969c\u6392\u9664",description:"This page contains a few commonly occurring questions.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/developer/troubleshooting.md",sourceDirName:"developer",slug:"/developer/troubleshooting",permalink:"/docs/developer/troubleshooting",draft:!1,editUrl:"https://github.com/kubeedge/website/blob/master/docs/developer/troubleshooting.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"\u6545\u969c\u6392\u9664",sidebar_position:7},sidebar:"documentationSideBar",previous:{title:"Message Topics",permalink:"/docs/developer/message_topics"},next:{title:"Community",permalink:"/docs/category/community"}},d={},c=[{value:"keadm init failed to download release",id:"keadm-init-failed-to-download-release",level:2},{value:"Container keeps pending/ terminating",id:"container-keeps-pending-terminating",level:2},{value:"Where do we find cloudcore/edgecore logs",id:"where-do-we-find-cloudcoreedgecore-logs",level:2},{value:"Where do we find the pod logs",id:"where-do-we-find-the-pod-logs",level:2}],p={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This page contains a few commonly occurring questions."),(0,o.kt)("h2",{id:"keadm-init-failed-to-download-release"},"keadm init failed to download release"),(0,o.kt)("p",null,"If you have issue about connection to github, please follow below guide with proxy before do setup, take ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.12.1")," as example:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"download release pkgs from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeedge/kubeedge/releases/tag/v1.12.1"},"release page"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"download crds yamls matches the release version you downloaded, links as below:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/kubeedge/kubeedge/v1.12.1/build/crds/devices/devices_v1alpha2_device.yaml"},"devices_v1alpha1_device.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/kubeedge/kubeedge/v1.12.1/build/crds/devices/devices_v1alpha2_devicemodel.yaml"},"devices_v1alpha1_devicemodel.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/kubeedge/kubeedge/v1.12.1/build/crds/reliablesyncs/cluster_objectsync_v1alpha1.yaml"},"cluster_objectsync_v1alpha1.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/kubeedge/kubeedge/v1.12.1/build/crds/reliablesyncs/objectsync_v1alpha1.yaml"},"objectsync_v1alpha1.yaml")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"put them under ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/kubeedge")," as below:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tree -L 3\n.\n\u251c\u2500\u2500 crds\n\u2502\xa0\xa0 \u251c\u2500\u2500 devices\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devices_v1alpha2_devicemodel.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 devices_v1alpha2_device.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 reliablesyncs\n\u2502\xa0\xa0     \u251c\u2500\u2500 cluster_objectsync_v1alpha1.yaml\n\u2502\xa0\xa0     \u2514\u2500\u2500 objectsync_v1alpha1.yaml\n\u2514\u2500\u2500 kubeedge-v1.12.1-linux-amd64.tar.gz\n\n3 directories, 5 files\n\n")))),(0,o.kt)("p",null,"Then you can do setup without any network issue, ",(0,o.kt)("inlineCode",{parentName:"p"},"keadm")," would detect them and not download again(make sure you specify ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.12.1")," with option ",(0,o.kt)("inlineCode",{parentName:"p"},"--kubeedge-version v1.12.1"),")."),(0,o.kt)("h2",{id:"container-keeps-pending-terminating"},"Container keeps pending/ terminating"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Check the output of ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl get nodes"),", whether the node is running healthy. Note that nodes in unreachable, offline status cannot complete graceful/soft pod deletion until they come back to normal.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Check the output of ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl describe pod <your-pod>"),", whether the pod is scheduled successfully.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Check the ",(0,o.kt)("inlineCode",{parentName:"p"},"edgecore")," logs for any errors.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Check the architecture of the node running ",(0,o.kt)("inlineCode",{parentName:"p"},"edgecore")," and make sure that container image you are trying to run is of the same architecture.\nFor example, if you are running ",(0,o.kt)("inlineCode",{parentName:"p"},"edgecore")," on Raspberry Pi 4, which is of ",(0,o.kt)("inlineCode",{parentName:"p"},"arm64v8")," architecture, the nginx image to be executed would be ",(0,o.kt)("inlineCode",{parentName:"p"},"arm64v8/nginx")," from the docker hub.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Also, check that the ",(0,o.kt)("inlineCode",{parentName:"p"},"podSandboxImage")," is correctly set as defined in ",(0,o.kt)("a",{parentName:"p",href:"../setup/config#%E4%BF%AE%E6%94%B9-edgecoreyaml"},"Modification in edgecore.yaml"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If all of the above is correctly set, login manually to your edge node and run your docker image manually by"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"}," docker run <your-container-image>\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If the docker container image is not pulled from the docker hub, please check that there is enough space on the edge node."))),(0,o.kt)("h2",{id:"where-do-we-find-cloudcoreedgecore-logs"},"Where do we find cloudcore/edgecore logs"),(0,o.kt)("p",null,"This depends on the how cloudcore/ edgecore has been executed."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"systemd")," was used to start the cloudcore/ edgecore? then use ",(0,o.kt)("inlineCode",{parentName:"li"},"journalctl --unit <name of the service probably edgecore.service>")," to view the logs."),(0,o.kt)("li",{parentName:"ol"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"nohup")," was used to start the cloudcore/ edgecore, either a path would have been added where the log is located, Otherwise, if the log file wasn't provided, the logs would be written to stdout.")),(0,o.kt)("h2",{id:"where-do-we-find-the-pod-logs"},"Where do we find the pod logs"),(0,o.kt)("p",null,"Connect to the edge node and then either"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use the log file located in ",(0,o.kt)("inlineCode",{parentName:"li"},"/var/log/pods")," or"),(0,o.kt)("li",{parentName:"ul"},"use commands like ",(0,o.kt)("inlineCode",{parentName:"li"},"docker logs <container id>"))),(0,o.kt)("p",null,"You can also enable ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl logs")," feature refer to this ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/debug"},"guide"),"."))}u.isMDXComponent=!0}}]);