"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1747],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),d=a,f=s["".concat(l,".").concat(d)]||s[d]||m[d]||o;return r?n.createElement(f,p(p({ref:t},u),{},{components:r})):n.createElement(f,p({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[s]="string"==typeof e?e:a,p[1]=i;for(var c=2;c<o;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},13818:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(83117),a=(r(67294),r(3905));const o={title:"Mappers",id:"mappers-index"},p=void 0,i={unversionedId:"developer/mappers/mappers-index",id:"developer/mappers/mappers-index",title:"Mappers",description:"Overview",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/developer/mappers/index.md",sourceDirName:"developer/mappers",slug:"/developer/mappers/",permalink:"/gameone/docs/developer/mappers/",draft:!1,tags:[],version:"current",frontMatter:{title:"Mappers",id:"mappers-index"},sidebar:"documentationSideBar",previous:{title:"\u8def\u7531\u7ba1\u7406",permalink:"/gameone/docs/developer/custom_message_deliver"},next:{title:"Bluetooth",permalink:"/gameone/docs/developer/mappers/bluetooth"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Types",id:"types",level:2}],u={toc:c},s="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Mapper is an application that is used to connect and control devices. The responsibilities of mapper are as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Scan and connect to the device."),(0,a.kt)("li",{parentName:"ul"},"Report the actual state of twin-attributes of device."),(0,a.kt)("li",{parentName:"ul"},"Map the expected state of device-twin to actual state of device-twin."),(0,a.kt)("li",{parentName:"ul"},"Collect telemetry data from device."),(0,a.kt)("li",{parentName:"ul"},"Convert readings from device to format accepted by KubeEdge."),(0,a.kt)("li",{parentName:"ul"},"Schedule actions on the device."),(0,a.kt)("li",{parentName:"ul"},"Check health of the device.")),(0,a.kt)("h2",{id:"types"},"Types"),(0,a.kt)("p",null,"Now we have,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"./bluetooth"},"bluetooth mapper"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"./modbus"},"modbus mapper"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Opcua mapper"))),(0,a.kt)("p",null,"For other mappers, we could follow ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubeedge/mappers-go/blob/main/docs/UserGuideofCustomizedMapper.md"},"this guide")," to genenrate your own mapper to control the edge devices."))}m.isMDXComponent=!0}}]);